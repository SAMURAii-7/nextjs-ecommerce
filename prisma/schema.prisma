generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model Product {
    id          String     @id @default(uuid())
    name        String
    description String
    imageUrl    String
    price       Int
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt
    CartItem    CartItem[]

    @@map("products")
}

model Cart {
    id        String     @id @default(uuid())
    items     CartItem[]
    userId    String?
    user      User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt

    @@map("carts")
}

model CartItem {
    id        String  @id @default(uuid())
    productId String
    product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
    quantity  Int
    cartId    String
    cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)

    @@map("cart_items")
}

model Account {
    id                String  @id @default(uuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@map("accounts")
}

model Session {
    id           String   @id @default(uuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("sessions")
}

model User {
    id            String    @id @default(uuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    Cart          Cart[]

    @@map("users")
}

model VerificationToken {
    id         Int      @id @default(autoincrement())
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
    @@map("verification_tokens")
}
